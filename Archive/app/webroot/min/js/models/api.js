!function(){define(["utilities/global","controllers/application"],function(){var a=window.LSP,b=a.utilities;b.register("model","api",{_timeout:15e3,_url:function(){return""},_payload:function(a,b){return b},_isSuccess:function(a){return(a||{}).success===!0},_afterSuccess:function(a){return a},_request:function(c,d,e,f,g,h){var i=$.Deferred(),j={};return $.support.cors=!0,j.xhrData={type:c,url:this._url(e,g),data:this._payload(e,g),crossDomain:!0,dataType:d,context:this,timeout:this._timeout,passthrough:$.extend({},h)},console.log("API Request Sent via "+f,j.xhrData),$(a.controllers.application).triggerHandler("onBeforeAPICall",j),$(e).triggerHandler("onBeforeAPICall",j),$(e).triggerHandler(b.camelCase("on-Before-API-"+f+"-call"),j),$.ajax(j.xhrData).done(function(a){j.serverResponse=a;try{j.response=$.parseJSON(a)}catch(b){j.response=a}this._isSuccess(a)?(j.response=this._afterSuccess(j.response),i.resolve(j)):(j.error="invalidFormat",i.reject(j))}).fail(function(a){j.serverResponse=a;try{j.response=$.parseJSON(a.responseText)}catch(b){j.response=a}i.reject(j)}).always(function(){console.log("API Response Recieved via "+f,j)}),$.when(i).done(function(c){$(a.controllers.application).triggerHandler("onAfterAPICallSuccess",c),$(e).triggerHandler("onAfterAPICallSuccess",c),$(e).triggerHandler(b.camelCase("on-after-API-"+f+"-success"),c)}).fail(function(c){$(a.controllers.application).triggerHandler("onAfterAPICallFailure",c),$(e).triggerHandler("onAfterAPICallFailure",c),$(e).triggerHandler(b.camelCase("on-after-API-"+f+"-failure"),c)}).always(function(c){$(a.controllers.application).triggerHandler("onAfterAPICall",c),$(e).triggerHandler("onAfterAPICall",c),$(e).triggerHandler(b.camelCase("on-after-API-"+f),c)}),i.promise()},request:function(a,b,c,d){return this._request("GET","jsonp",a,b,c,d)}})})}();