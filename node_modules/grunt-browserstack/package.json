{
  "name": "grunt-browserstack",
  "description": "BrowserStack tasks for grunt",
  "version": "0.1.0",
  "homepage": "https://github.com/pghalliday/grunt-browserstack",
  "author": {
    "name": "Peter Halliday",
    "email": "pghalliday@gmail.com",
    "url": "http://stuffpetedoes.blogspot.nl/"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/pghalliday/grunt-browserstack.git"
  },
  "bugs": {
    "url": "https://github.com/pghalliday/grunt-browserstack/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/pghalliday/grunt-browserstack/blob/master/LICENSE-MIT"
    }
  ],
  "main": "grunt.js",
  "bin": {
    "grunt-browserstack": "bin/grunt-browserstack"
  },
  "engines": {
    "node": "0.8.14"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt": "~0.3.17"
  },
  "keywords": [
    "gruntplugin",
    "browserstack",
    "browserstacktunnel"
  ],
  "dependencies": {
    "browserstacktunnel-wrapper": "~1.0.0",
    "simplified-browserstack": "0.0.1"
  },
  "readme": "# grunt-browserstack\r\n\r\n[BrowserStack][browserstack] tasks for grunt\r\n\r\n## Getting Started\r\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-browserstack`\r\n\r\nThen add this line to your project's `grunt.js` gruntfile:\r\n\r\n```javascript\r\ngrunt.loadNpmTasks('grunt-browserstack');\r\n```\r\n\r\n[grunt]: http://gruntjs.com/\r\n[getting_started]: https://github.com/gruntjs/grunt/blob/master/docs/getting_started.md\r\n[browserstack]: http://www.browserstack.com/\r\n\r\n## Documentation\r\n\r\nExposes 3 tasks:\r\n\r\n### browserstack_list\r\n\r\nLists the available browsers to the console\r\n\r\n```javascript\r\nbrowserstack_list: {\r\n  dev: {\r\n    username: 'USERNAME',\r\n    password: 'PASSWORD'\r\n  }\r\n} \r\n```\r\n\r\n### browserstack\r\n\r\nStarts the requested workers with [BrowserStack][browserstack]. Optionally starts a BrowserStack tunnel to expose a local server to the workers.\r\n\r\nThis task does not exit untli the user presses a key at which time the workers are stopped again. Errors may occur when stopping the workers if they have timed out in the intervening period.\r\n\r\n```javascript\r\nbrowserstack: {\r\n  dev: {\r\n    credentials: {\r\n      username: 'USERNAME',\r\n      password: 'PASSWORD'\r\n    },\r\n    // optional tunnel configuration - if omitted a tunnel is not started\r\n    tunnel: {\r\n      // your BrowserStack API key\r\n      key: 'KEY',\r\n      // a list of hostnames and ports to expose\r\n      hosts: [{\r\n        name: 'HOSTNAME',\r\n        port: PORT,\r\n        sslFlag: 0\r\n      }]\r\n    },\r\n    // required worker start configuration\r\n    start: {\r\n      // time to wait for workers to start running\r\n      queueTimeout: QUEUE_TIMEOUT,\r\n      // default URL for started workers\r\n      url: 'URL',\r\n      // default timeout for started workers\r\n      timeout: TIMEOUT,\r\n      // list of browser types to start, as returned from the list function\r\n      browsers: [{\r\n        os: 'OS',\r\n        browser: 'BROWSER',\r\n        version: 'VERSION',\r\n        // override the default URL\r\n        url: 'URL',\r\n        // override the default worker timeout\r\n        timeout: TIMEOUT\r\n      }, {\r\n        os: 'OS',\r\n        browser: 'BROWSER',\r\n        version: 'VERSION',\r\n        // override the default URL\r\n        url: 'URL',\r\n        // override the default worker timeout\r\n        timeout: TIMEOUT\r\n      }]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### browserstack_clean\r\n\r\nStops all currently running workers for the given account. For the purposes of cleaning up orphaned workers when needed\r\n\r\n```javascript\r\nbrowserstack_clean: {\r\n  dev: {\r\n    username: 'USERNAME',\r\n    password: 'PASSWORD'\r\n  }\r\n} \r\n```\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][grunt].\r\n\r\n## License\r\nCopyright (c) 2012 Peter Halliday  \r\nLicensed under the MIT license.\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-browserstack@0.1.0",
  "dist": {
    "shasum": "bed4175e5b75b79e58c9365f3a4a5ceb46257dbc"
  },
  "_from": "grunt-browserstack@",
  "_resolved": "https://registry.npmjs.org/grunt-browserstack/-/grunt-browserstack-0.1.0.tgz"
}
